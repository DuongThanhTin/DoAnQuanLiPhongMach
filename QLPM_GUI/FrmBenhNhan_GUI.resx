<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GC0AAAAASUVORK5CYII=
</value>
  </data>
</root>