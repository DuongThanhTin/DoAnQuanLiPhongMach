<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPhieuKhamBenh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>